version: "3.9"

services:
  # ─────────────────────── Bases y mensajería ──────────────────────
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: cvflow
      POSTGRES_PASSWORD: cvflow
      POSTGRES_DB: cvflow
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]

  # ─────────────────────────── Seguridad ───────────────────────────
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_ADMIN_EMAIL: admin@dummy.local
    ports: ["8180:8080"]
    volumes:
      - keycloak_data:/opt/keycloak/data

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  # ─────────────────────────── IA / backend ─────────────────────────
  ollama:
    build:
      context: .               # raíz del repo
      dockerfile: ai-ollama.Dockerfile
    image: smartcareermate/ollama-llama3:latest
    ports:
      - "11434:11434"

  core-service:
    build: { context: ./core-service }
    depends_on: [postgres]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cvflow
      SPRING_DATASOURCE_USERNAME: cvflow
      SPRING_DATASOURCE_PASSWORD: cvflow
    ports: ["8082:8082"]

  ai-service:
    build: { context: ./ai-service }
    depends_on:
      - ollama
    environment:
      SPRING_AI_OLLAMA_URL: http://ollama:11434
      SPRING_AI_OLLAMA_MODEL: llama3
    ports: ["8084:8083"]

  # ────────────────────────── CV-parser ────────────────────────────
  cv-parser:
    build: { context: ./cv-parser }
    ports: ["8085:8085"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ─────────────────────────── Gateway ─────────────────────────────
  gateway:
    build: { context: ./gateway }
    depends_on:
      ai-service:   { condition: service_started }
      core-service: { condition: service_started }
      cv-parser:    { condition: service_healthy }
    ports: ["8080:8080"]

volumes:
  pgdata:
  keycloak_data:
