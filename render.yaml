databases:
  - name: cvflow-db
    databaseName: cvflow
    user: cvflow
    plan: free          # ⇧ si necesitas más RAM pásate al plan ‘starter’ ► 512 MB

services:
  # ────────────────────── FRONTEND ──────────────────────
  - name: frontend
    type: web
    env: docker
    rootDir: frontend           # subcarpeta donde está el Dockerfile
    dockerfilePath: frontend/Dockerfile
    autoDeploy: true
    plan: free
    buildFilter:
      paths: ["frontend/**"]
    # puerto que tu Dockerfile hace EXPOSE; cámbialo si tu contenedor usa otro:
    envVars:
      - key: VITE_API_URL       # ejemplo; adapta al nombre real de tu var
        value: "https://gateway-{{ env.RAILWAY_SERVICE_ID }}.onrender.com"

  # ─────────────────────── GATEWAY ──────────────────────
  - name: gateway
    type: web
    env: docker
    rootDir: gateway
    dockerfilePath: gateway/Dockerfile
    plan: free
    buildFilter:
      paths: ["gateway/**"]
    # Render autodescubre el puerto expuesto en el Dockerfile
    envVars:
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: cvflow-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: cvflow-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: cvflow-db
          property: password
      - key: RABBITMQ_HOST
        value: rabbitmq        # nombre del servicio privado

  # ──────────────────── MICRO‑SERVICIOS ───────────────────
  - name: core-service
    type: pserv
    env: docker
    rootDir: core-service
    dockerfilePath: core-service/Dockerfile
    envVars:
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: cvflow-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: cvflow-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: cvflow-db
          property: password
      - key: RABBITMQ_HOST
        value: rabbitmq

  - name: ai-service
    type: pserv
    env: docker
    rootDir: ai-service
    dockerfilePath: ai-service/Dockerfile
    envVars:
      - key: RABBITMQ_HOST
        value: rabbitmq

  - name: cv-parser
    type: pserv
    env: docker
    rootDir: cv-parser
    dockerfilePath: cv-parser/Dockerfile
    envVars:
      - key: RABBITMQ_HOST
        value: rabbitmq

  # ─────────────────────── RabbitMQ ───────────────────────
  - name: rabbitmq
    type: pserv
    env: docker
    image: rabbitmq:3-management     # usa la imagen oficial
    autoDeploy: false
    # Render necesita saber qué puerto espera para health‑check (5672 ≈ AMQP):
    healthCheckPath: /
    ports:
      - 5672
      - 15672                      # panel de gestión (solo interno)
    plan: free
